1.
Question 1
Complete the function by filling in the missing parts. The color_translator function receives the name of a color, then prints its hexadecimal value. Currently, it only supports the three additive primary colors (red, green, blue), so it returns "unknown" for all other colors.

1 / 1 point
123456789101112131415161718
def color_translator(color):
	if color == "red":
		hex_color = "#ff0000"
	elif color == "green":
		hex_color = "#00ff00"
	elif color == "blue":
		hex_color = "#0000ff"
	else:
		hex_color = "unknown"
	return hex_color

Reset
Correct
Well done! You're breezing through the if-else clauses!

2.
Question 2
What's the value of this Python expression: "big" > "small"

1 / 1 point

True


False


big


small

Correct
You nailed it! The conditional operator > checks if two values are equal. The result of that operation is a boolean: either True or False. Alphabetically, "big" is less than "small".

3.
Question 3
What is the elif keyword used for?

1 / 1 point

To mark the end of the if statement


To handle more than two comparison cases


To replace the "or" clause in the if statement


Nothing - it's a misspelling of the else-if keyword

Correct
You got it! The elif keyword is used in place of multiple embedded if clauses, when a single if/else structure is not enough.

4.
Question 4
Students in a class receive their grades as Pass/Fail. Scores of 60 or more (out of 100) mean that the grade is "Pass". For lower scores, the grade is "Fail". In addition, scores above 95 (not included) are graded as "Top Score". Fill in this function so that it returns the proper grade.

1 / 1 point
123456789101112131415
def exam_grade(score):
	if score == 100:
		grade = "Top Score"
	elif score >= 60:
		grade = "Pass"
	else:
		grade = "Fail"
	return grade

print(exam_grade(65)) # Should be Pass

Reset
Correct
Good job! You're getting the hang of it!.

5.
Question 5
What's the value of this Python expression: 11 % 5?

1 / 1 point

2.2


2


1


0

Correct
Excellent! "%" is the modulo operator, which returns the remainder of the integer division between two numbers. 11 divided by 5 equals 2 with remainder of 1.

6.
Question 6
Complete the body of the format_name function. This function receives the first_name and last_name parameters and then returns a properly formatted string.

Specifically:

If both the last_name and the first_name parameters are supplied, the function should return like so:

12
print(format_name("Ella", "Fitzgerald"))
Name: Fitzgerald, Ella
If only one name parameter is supplied (either the first name or the last name) , the function should return like so:

12
print(format_name("Adele", ""))
Name: Adele
or

12
print(format_name("", "Einstein"))
Name: Einstein
Finally, if both names are blank, the function should return the empty string:

12
print(format_name("", ""))

Implement below:

1 / 1 point
1234567891011121314151617181920212223
def format_name(first_name, last_name):
	# code goes here
	if first_name == '' and last_name == '':
		string = ""
	elif first_name == '':
		string = "Name: "+last_name
	elif last_name == '':
		string = "Name: "+first_name
	else:
		string = "Name: "+last_name+", "+first_name

Reset
Correct
Awesome! You're getting the hang of the multiple and
embedded "if" clauses!

7.
Question 7
The longest_word function is used to compare 3 words. It should return the word with the most number of characters (and the first in the list when they have the same length). Fill in the blank to make this happen.

1 / 1 point
12345678910111213141516
def longest_word(word1, word2, word3):
	if len(word1) >= len(word2) and len(word1) >= len(word3):
		word = word1
	elif len(word1) <= len(word2) and len(word2) >= len(word3):
		word = word2
	else:
		word = word3
	return(word)

print(longest_word("chair", "couch", "table"))

Reset
Correct
You got it! You've figured out how to use an elif clause,
well done!

8.
Question 8
What’s the output of this code?

123
def sum(x, y):
		return(x+y)
print(sum(sum(1,2), sum(3,4)))

1 / 1 point
10
Correct
You nailed it! We’re calling the sum function 3 times: returning 3, then 7, then adding up 3 plus 7 for the total of 10.

9.
Question 9
What's the value of this Python expression?

((10 >= 5*2) and (10 <= 5*2))

1 / 1 point

True


False


10


5*2

Correct
Right on! When using the "and" operator, a statement is True if both parts of the conditional are True.

10.
Question 10
The fractional_part function divides the numerator by the denominator, and returns just the fractional part (a number between 0 and 1). Complete the body of the function so that it returns the right number.
Note: Since division by 0 produces an error, if the denominator is 0, the function should return 0 instead of attempting the division.

1 / 1 point
1234567891011121314151617
def fractional_part(numerator, denominator):
	# Operate with numerator and denominator to 
	if denominator !=0: # denominator is no 0 keep operation
		if numerator == denominator or numerator ==0: # return 0 if num and den is the same or num is 0
			return 0
		else:
			return (numerator / denominator) % 1 # % is remainder
	else:	
	# keep just the fractional part of the quotient
		return 0

Reset
Correct
Well done! You're handling the math operations, as well as
division by 0, perfectly!

